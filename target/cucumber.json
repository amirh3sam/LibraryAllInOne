[{"line":1,"elements":[{"start_timestamp":"2023-07-26T21:56:16.869Z","line":4,"name":"Retrieve all users from the API endpoint","description":"","id":"as-a-librarian--i-want-to-retrieve-all-users;retrieve-all-users-from-the-api-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":9599074600,"status":"passed"},"line":6,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"duration":999600,"status":"passed"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"duration":1234917400,"status":"passed"},"line":8,"name":"I send GET request to \"/get_all_users\" endpoint","match":{"arguments":[{"val":"\"/get_all_users\"","offset":22}],"location":"com.library.steps.APIStepDefs.i_send_get_request_to_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"duration":1022700,"status":"passed"},"line":9,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"duration":1978100,"status":"passed"},"line":10,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:67)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.internal.assertion.BodyMatcher.validate(BodyMatcher.java:102)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.lambda$validate$0(BodyMatcherGroup.java:30)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.java:30)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat com.library.steps.APIStepDefs.field_should_not_be_null(APIStepDefs.java:76)\r\n\tat âœ½.\"id\" field should not be null(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us01.feature:11)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:67)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.internal.assertion.BodyMatcher.validate(BodyMatcher.java:102)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.lambda$validate$0(BodyMatcherGroup.java:30)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.java:30)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat com.library.steps.APIStepDefs.field_should_not_be_null(APIStepDefs.java:76)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":795225300,"status":"failed"},"line":11,"name":"\"id\" field should not be null","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":12,"name":"\"name\" field should not be null","match":{"arguments":[{"val":"\"name\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@us01"}]}],"name":"As a librarian, I want to retrieve all users","description":"","id":"as-a-librarian--i-want-to-retrieve-all-users","keyword":"Feature","uri":"file:src/test/resources/features/rest/us01.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-07-26T21:56:16.869Z","line":5,"name":"Retrieve single user","description":"","id":"as-a-user--i-want-to-search-for-a-specific-user-by-their-id;retrieve-single-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":9599074600,"status":"passed"},"line":6,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"duration":998400,"status":"passed"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"duration":2002600,"status":"passed"},"line":8,"name":"Path param is \"1\"","match":{"arguments":[{"val":"\"1\"","offset":14}],"location":"com.library.steps.APIStepDefs.pathParamIs(java.lang.String)"},"keyword":"And "},{"result":{"duration":492909300,"status":"passed"},"line":9,"name":"I send GET request to \"/get_user_by_id/{id}\" endpoint","match":{"arguments":[{"val":"\"/get_user_by_id/{id}\"","offset":22}],"location":"com.library.steps.APIStepDefs.i_send_get_request_to_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"duration":2014200,"status":"passed"},"line":10,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"duration":9552700,"status":"passed"},"line":11,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.internal.assertion.BodyMatcher.validate(BodyMatcher.java:102)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.lambda$validate$0(BodyMatcherGroup.java:30)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.java:30)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:157)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat com.library.steps.APIStepDefs.fieldShouldBeSameWithPathParam(APIStepDefs.java:89)\r\n\tat âœ½.\"id\" field should be same with path param(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us02.feature:12)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.internal.assertion.BodyMatcher.validate(BodyMatcher.java:102)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.lambda$validate$0(BodyMatcherGroup.java:30)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.java:30)\r\n\tat io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:157)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$3.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat com.library.steps.APIStepDefs.fieldShouldBeSameWithPathParam(APIStepDefs.java:89)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":375793700,"status":"failed"},"line":12,"name":"\"id\" field should be same with path param","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.fieldShouldBeSameWithPathParam(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"following fields should not be null","match":{"location":"com.library.steps.APIStepDefs.followingFieldsShouldNotBeNull(java.util.List<java.lang.String>)"},"rows":[{"cells":["full_name"]},{"cells":["email"]},{"cells":["password"]}],"keyword":"And "}]}],"name":"As a user, I want to search for a specific user by their id","description":"        so that I can quickly find the information I need.","id":"as-a-user--i-want-to-search-for-a-specific-user-by-their-id","keyword":"Feature","uri":"file:src/test/resources/features/rest/us02.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-07-26T21:56:16.870Z","line":5,"name":"Create a new book API","description":"","id":"as-a-librarian--i-want-to-create-a-new-book;create-a-new-book-api","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":9600587200,"status":"passed"},"line":6,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"duration":998400,"status":"passed"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"duration":469252500,"status":"passed"},"line":8,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"duration":1366863300,"status":"passed"},"line":9,"name":"I create a random \"book\" as request body","match":{"arguments":[{"val":"\"book\"","offset":18}],"location":"com.library.steps.APIStepDefs.iCreateARandomAsRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":905027600,"status":"passed"},"line":10,"name":"I send POST request to \"/add_book\" endpoint","match":{"arguments":[{"val":"\"/add_book\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <200> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$2.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat com.library.steps.APIStepDefs.status_code_should_be(APIStepDefs.java:67)\r\n\tat âœ½.status code should be 200(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us03.feature:11)\r\n","duration":18572600,"status":"failed"},"line":11,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":12,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the field value for \"message\" path should be equal to \"The book has been created.\"","match":{"arguments":[{"val":"\"message\"","offset":20},{"val":"\"The book has been created.\"","offset":54}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"\"book_id\" field should not be null","match":{"arguments":[{"val":"\"book_id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2023-07-26T21:56:29.327Z","before":[{"result":{"duration":11311197300,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":401085600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":18,"name":"Create a new book all layers","description":"","id":"as-a-librarian--i-want-to-create-a-new-book;create-a-new-book-all-layers","after":[{"result":{"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":2711956500,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat âœ½.I logged Library api as a \"librarian\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us03.feature:19)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":318645400,"status":"failed"},"line":19,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":20,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":21,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":22,"name":"I create a random \"book\" as request body","match":{"arguments":[{"val":"\"book\"","offset":18}],"location":"com.library.steps.APIStepDefs.iCreateARandomAsRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":23,"name":"I logged in Library UI as \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.iLoggedInLibraryUIAs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":24,"name":"I navigate to \"Books\" page","match":{"arguments":[{"val":"\"Books\"","offset":14}],"location":"com.library.steps.APIStepDefs.iNavigateToPage(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":25,"name":"I send POST request to \"/add_book\" endpoint","match":{"arguments":[{"val":"\"/add_book\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"duration":997400,"status":"skipped"},"line":26,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":27,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":28,"name":"the field value for \"message\" path should be equal to \"The book has been created.\"","match":{"arguments":[{"val":"\"message\"","offset":20},{"val":"\"The book has been created.\"","offset":54}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":29,"name":"\"book_id\" field should not be null","match":{"arguments":[{"val":"\"book_id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":30,"name":"UI, Database and API created book information must match","match":{"location":"com.library.steps.APIStepDefs.uiDatabaseAndAPICreatedBookInformationMustMatch()"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]}],"name":"As a librarian, I want to create a new book","description":"","id":"as-a-librarian--i-want-to-create-a-new-book","keyword":"Feature","uri":"file:src/test/resources/features/rest/us03.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-07-26T21:56:16.866Z","before":[{"result":{"duration":15185609600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":515391100,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":3,"name":"Create a new user API","description":"","id":"as-a-librarian--i-want-to-create-a-new-user;create-a-new-user-api","after":[{"result":{"duration":1957200,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":8362547600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat âœ½.I logged Library api as a \"librarian\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us04.feature:4)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":389479700,"status":"failed"},"line":4,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"duration":6526000,"status":"skipped"},"line":5,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":6,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":7,"name":"I create a random \"user\" as request body","match":{"arguments":[{"val":"\"user\"","offset":18}],"location":"com.library.steps.APIStepDefs.iCreateARandomAsRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"duration":1000200,"status":"skipped"},"line":8,"name":"I send POST request to \"/add_user\" endpoint","match":{"arguments":[{"val":"\"/add_user\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"duration":1001100,"status":"skipped"},"line":9,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":10,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":11,"name":"the field value for \"message\" path should be equal to \"The user has been created.\"","match":{"arguments":[{"val":"\"message\"","offset":20},{"val":"\"The user has been created.\"","offset":54}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"duration":1517600,"status":"skipped"},"line":12,"name":"\"user_id\" field should not be null","match":{"arguments":[{"val":"\"user_id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@us04"},{"name":"@ui"},{"name":"@db"}]},{"start_timestamp":"2023-07-26T21:56:41.421Z","before":[{"result":{"duration":9954019600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":400833600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":16,"name":"Create a new user all layers","description":"","id":"as-a-librarian--i-want-to-create-a-new-user;create-a-new-user-all-layers","after":[{"result":{"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":993926500,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat âœ½.I logged Library api as a \"librarian\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us04.feature:17)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:27)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_as_a(APIStepDefs.java:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":384395500,"status":"failed"},"line":17,"name":"I logged Library api as a \"librarian\"","match":{"arguments":[{"val":"\"librarian\"","offset":26}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_as_a(java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":18,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":19,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":20,"name":"I create a random \"user\" as request body","match":{"arguments":[{"val":"\"user\"","offset":18}],"location":"com.library.steps.APIStepDefs.iCreateARandomAsRequestBody(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":21,"name":"I send POST request to \"/add_user\" endpoint","match":{"arguments":[{"val":"\"/add_user\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":22,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":23,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":24,"name":"the field value for \"message\" path should be equal to \"The user has been created.\"","match":{"arguments":[{"val":"\"message\"","offset":20},{"val":"\"The user has been created.\"","offset":54}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":25,"name":"\"user_id\" field should not be null","match":{"arguments":[{"val":"\"user_id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":26,"name":"created user information should match with Database","match":{"location":"com.library.steps.APIStepDefs.created_user_information_should_match_with_database()"},"keyword":"And "},{"result":{"status":"skipped"},"line":27,"name":"created user should be able to login Library UI","match":{"location":"com.library.steps.APIStepDefs.created_user_should_be_able_to_login_library_ui()"},"keyword":"And "},{"result":{"status":"skipped"},"line":28,"name":"created user name should appear in Dashboard Page","match":{"location":"com.library.steps.APIStepDefs.created_user_name_should_appear_in_dashboard_page()"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]}],"name":"As a librarian, I want to create a new user","description":"","id":"as-a-librarian--i-want-to-create-a-new-user","keyword":"Feature","uri":"file:src/test/resources/features/rest/us04.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2023-07-26T21:56:16.901Z","before":[{"result":{"duration":14783206600,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":888672700,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":21,"name":"Decode User","description":"","id":":-as-a-user--i-want-to-view-my-own-user-information-using-the-api;decode-user;;2","after":[{"result":{"duration":1003400,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":4236395300,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:67)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat âœ½.I logged Library api with credentials \"student5@library\" and \"libraryUser\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us05.feature:6)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:67)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:50)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":322127300,"status":"failed"},"line":6,"name":"I logged Library api with credentials \"student5@library\" and \"libraryUser\"","match":{"arguments":[{"val":"\"student5@library\"","offset":38},{"val":"\"libraryUser\"","offset":61}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":8,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":9,"name":"I send token information as request body","match":{"location":"com.library.steps.APIStepDefs.i_send_token_information_as_request_body()"},"keyword":"And "},{"result":{"status":"skipped"},"line":10,"name":"I send POST request to \"/decode\" endpoint","match":{"arguments":[{"val":"\"/decode\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":12,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the field value for \"user_group_id\" path should be equal to \"3\"","match":{"arguments":[{"val":"\"user_group_id\"","offset":20},{"val":"\"3\"","offset":60}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"the field value for \"email\" path should be equal to \"student5@library\"","match":{"arguments":[{"val":"\"email\"","offset":20},{"val":"\"student5@library\"","offset":52}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":15,"name":"\"full_name\" field should not be null","match":{"arguments":[{"val":"\"full_name\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":16,"name":"\"id\" field should not be null","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]},{"start_timestamp":"2023-07-26T21:56:37.166Z","before":[{"result":{"duration":11888608900,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":360927700,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":22,"name":"Decode User","description":"","id":":-as-a-user--i-want-to-view-my-own-user-information-using-the-api;decode-user;;3","after":[{"result":{"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"iVBORw0KGgoAAAANSUhEUgAAB4AAAAOUCAYAAABDqi5YAAAAAXNSR0IArs4c6QAAIABJREFUeJzs3WmMZfl93+fvubV09Tq9ztLds/YyFEckZyVpyYqoIU1FFgMjMQhBCAxYho0EVhIgyAIDyZvELxzkRSJEpmFBDMM4DkWKjgJZIhGL1pCckbnM1rP0rN09vUxX70t17ffWvefkRW23qqtnema6p7pOPQ9QU933/uuc/71Vb2o+/TunGBsbqwIAAAAAAADAitdY7g0AAAAAAAAAcGMIwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQEwIwAAAAAAAAQE0IwAAAAAAAAAA1IQADAAAAAAAA1IQADAAAAAAAAFATAjAAAAAAAABATQjAAAAAAAAAADUhAAMAAAAAAADUhAAMAAAAAAAAUBMCMAAAAAAAAEBNCMAAAAAAAAAANSEAAwAAAAAAANSEAAwAAAAAAABQ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ACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIQQgAEAAAAAAABCCMAAAAAAAAAAIQRgAAAAAAAAgBACMAAAAAAAAEAIARgAAAAAAAAghAAMAAAAAAAAEEIABgAAAAAAAAghAAMAAAAAAACEEIABAAAAAAAAQgjAAAAAAAAAACEEYAAAAAAAAIAQAjAAAAAAAABACAEYAAAAAAAAIIQADAAAAAAAABBCAAYAAAAAAAAIIQADAAAAAAAAhBCAAQAAAAAAAEIIwAAAAAAAAAAhBGAAAAAAAACAEAIwAAAAAAAAQAgBGAAAAAAAACCEAAwAAAAAAAAQQgAGAAAAAAAACCEAAwAAAAAAAIT4A0ly53yLbn6PAAAAAElFTkSuQmCC","mime_type":"image/png","name":"screenshot"}],"result":{"duration":5530098900,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat âœ½.I logged Library api with credentials \"librarian10@library\" and \"libraryUser\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us05.feature:6)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":281505400,"status":"failed"},"line":6,"name":"I logged Library api with credentials \"librarian10@library\" and \"libraryUser\"","match":{"arguments":[{"val":"\"librarian10@library\"","offset":38},{"val":"\"libraryUser\"","offset":64}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1019400,"status":"skipped"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":8,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":9,"name":"I send token information as request body","match":{"location":"com.library.steps.APIStepDefs.i_send_token_information_as_request_body()"},"keyword":"And "},{"result":{"status":"skipped"},"line":10,"name":"I send POST request to \"/decode\" endpoint","match":{"arguments":[{"val":"\"/decode\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":12,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the field value for \"user_group_id\" path should be equal to \"2\"","match":{"arguments":[{"val":"\"user_group_id\"","offset":20},{"val":"\"2\"","offset":60}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"the field value for \"email\" path should be equal to \"librarian10@library\"","match":{"arguments":[{"val":"\"email\"","offset":20},{"val":"\"librarian10@library\"","offset":52}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":15,"name":"\"full_name\" field should not be null","match":{"arguments":[{"val":"\"full_name\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"duration":1075700,"status":"skipped"},"line":16,"name":"\"id\" field should not be null","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]},{"start_timestamp":"2023-07-26T21:56:55.363Z","before":[{"result":{"duration":18108998800,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":355596400,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":23,"name":"Decode User","description":"","id":":-as-a-user--i-want-to-view-my-own-user-information-using-the-api;decode-user;;4","after":[{"result":{"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":11131753800,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat âœ½.I logged Library api with credentials \"student10@library\" and \"libraryUser\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us05.feature:6)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":270865500,"status":"failed"},"line":6,"name":"I logged Library api with credentials \"student10@library\" and \"libraryUser\"","match":{"arguments":[{"val":"\"student10@library\"","offset":38},{"val":"\"libraryUser\"","offset":62}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":8,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":9,"name":"I send token information as request body","match":{"location":"com.library.steps.APIStepDefs.i_send_token_information_as_request_body()"},"keyword":"And "},{"result":{"status":"skipped"},"line":10,"name":"I send POST request to \"/decode\" endpoint","match":{"arguments":[{"val":"\"/decode\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":12,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the field value for \"user_group_id\" path should be equal to \"3\"","match":{"arguments":[{"val":"\"user_group_id\"","offset":20},{"val":"\"3\"","offset":60}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"the field value for \"email\" path should be equal to \"student10@library\"","match":{"arguments":[{"val":"\"email\"","offset":20},{"val":"\"student10@library\"","offset":52}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":15,"name":"\"full_name\" field should not be null","match":{"arguments":[{"val":"\"full_name\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":16,"name":"\"id\" field should not be null","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]},{"start_timestamp":"2023-07-26T21:57:25.241Z","before":[{"result":{"duration":10003870500,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUp()"}},{"result":{"duration":351845400,"status":"passed"},"match":{"location":"com.library.steps.Hooks.setUpDB()"}}],"line":24,"name":"Decode User","description":"","id":":-as-a-user--i-want-to-view-my-own-user-information-using-the-api;decode-user;;5","after":[{"result":{"duration":1532100,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDownDB()"}},{"embeddings":[{"data":"","mime_type":"image/png","name":"screenshot"}],"result":{"duration":1086502400,"status":"passed"},"match":{"location":"com.library.steps.Hooks.tearDown(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"error_message":"BUG! exception in phase 'class generation' in source unit 'Script1.groovy' unexpected NullPointerException\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:903)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat âœ½.I logged Library api with credentials \"librarian13@library\" and \"libraryUser\"(file:///C:/Users/amirh/IdeaProjects/LibraryAllInOne/src/test/resources/features/rest/us05.feature:6)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.codehaus.groovy.util.ListHashMap.get(ListHashMap.java:120)\r\n\tat org.codehaus.groovy.ast.NodeMetaDataHandler.getNodeMetaData(NodeMetaDataHandler.java:44)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.nonSealed(ClassCompletionVerifier.java:364)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.checkClassForExtendingFinalOrSealed(ClassCompletionVerifier.java:332)\r\n\tat org.codehaus.groovy.classgen.ClassCompletionVerifier.visitClass(ClassCompletionVerifier.java:117)\r\n\tat org.codehaus.groovy.control.CompilationUnit$3.call(CompilationUnit.java:733)\r\n\tat org.codehaus.groovy.control.CompilationUnit$IPrimaryClassNodeOperation.doPhaseOperation(CompilationUnit.java:898)\r\n\tat org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:653)\r\n\tat org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:627)\r\n\tat groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:368)\r\n\tat groovy.lang.GroovyClassLoader.lambda$parseClass$2(GroovyClassLoader.java:311)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.compute(StampedCommonCache.java:163)\r\n\tat org.codehaus.groovy.runtime.memoize.StampedCommonCache.getAndPut(StampedCommonCache.java:154)\r\n\tat groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309)\r\n\tat groovy.lang.GroovyShell.parseClass(GroovyShell.java:543)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:556)\r\n\tat groovy.lang.GroovyShell.parse(GroovyShell.java:568)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:431)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:466)\r\n\tat groovy.lang.GroovyShell.evaluate(GroovyShell.java:441)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrap.invoke(PogoMetaMethodSite.java:186)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:75)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.path.json.JSONAssertion.eval(JSONAssertion.groovy:84)\r\n\tat io.restassured.internal.path.json.JSONAssertion.this$2$eval(JSONAssertion.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getAsJsonObject(JSONAssertion.groovy:46)\r\n\tat io.restassured.internal.path.json.JSONAssertion$getAsJsonObject.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.JSONAssertion.getResult(JSONAssertion.groovy:28)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:203)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat com.library.utility.LibraryAPI_Util.getToken(LibraryAPI_Util.java:43)\r\n\tat com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(APIStepDefs.java:312)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:57)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:95)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:405)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n","duration":274180500,"status":"failed"},"line":6,"name":"I logged Library api with credentials \"librarian13@library\" and \"libraryUser\"","match":{"arguments":[{"val":"\"librarian13@library\"","offset":38},{"val":"\"libraryUser\"","offset":64}],"location":"com.library.steps.APIStepDefs.i_logged_library_api_with_credentials_and(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":7,"name":"Accept header is \"application/json\"","match":{"arguments":[{"val":"\"application/json\"","offset":17}],"location":"com.library.steps.APIStepDefs.accept_header_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":8,"name":"Request Content Type header is \"application/x-www-form-urlencoded\"","match":{"arguments":[{"val":"\"application/x-www-form-urlencoded\"","offset":31}],"location":"com.library.steps.APIStepDefs.requestContentTypeHeaderIs(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":9,"name":"I send token information as request body","match":{"location":"com.library.steps.APIStepDefs.i_send_token_information_as_request_body()"},"keyword":"And "},{"result":{"status":"skipped"},"line":10,"name":"I send POST request to \"/decode\" endpoint","match":{"arguments":[{"val":"\"/decode\"","offset":23}],"location":"com.library.steps.APIStepDefs.iSendPOSTRequestToEndpoint(java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"status code should be 200","match":{"arguments":[{"val":"200","offset":22}],"location":"com.library.steps.APIStepDefs.status_code_should_be(int)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":12,"name":"Response Content type is \"application/json; charset=utf-8\"","match":{"arguments":[{"val":"\"application/json; charset=utf-8\"","offset":25}],"location":"com.library.steps.APIStepDefs.response_content_type_is(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":13,"name":"the field value for \"user_group_id\" path should be equal to \"2\"","match":{"arguments":[{"val":"\"user_group_id\"","offset":20},{"val":"\"2\"","offset":60}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"the field value for \"email\" path should be equal to \"librarian13@library\"","match":{"arguments":[{"val":"\"email\"","offset":20},{"val":"\"librarian13@library\"","offset":52}],"location":"com.library.steps.APIStepDefs.theFieldValueForPathShouldBeEqualTo(java.lang.String,java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":15,"name":"\"full_name\" field should not be null","match":{"arguments":[{"val":"\"full_name\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "},{"result":{"status":"skipped"},"line":16,"name":"\"id\" field should not be null","match":{"arguments":[{"val":"\"id\"","offset":0}],"location":"com.library.steps.APIStepDefs.field_should_not_be_null(java.lang.String)"},"keyword":"And "}],"tags":[{"name":"@ui"},{"name":"@db"}]}],"name":": As a user, I want to view my own user information using the API","description":"  so that I can see what information is stored about me","id":":-as-a-user--i-want-to-view-my-own-user-information-using-the-api","keyword":"Feature","uri":"file:src/test/resources/features/rest/us05.feature","tags":[]}]